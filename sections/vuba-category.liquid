<section class="filter-inspire-imagination">
  <div class="container">
    <div class="py-16 3xl:py-24 w-full text-center">
      {% if section.settings.heading != blank %}
        <h2 class="text-2xl 3xl:text-[44px] text-secondary font-semibold inline-block leading-[1.2]">
          {{ section.settings.heading }}
        </h2>
      {% endif %}
    </div>

    <div class="flex flex-col md:flex-row gap-10 pb-14 3xl:pb-24">
      <!-- Sidebar Filters (Admin-Managed) -->
      <aside class="w-full md:w-1/4 gap-y-10 flex flex-wrap flex-col">
        {% if section.settings.project_filters != blank %}
          {% assign selected_filters = section.settings.project_filters.value %}

          {% if selected_filters.size > 0 %}
            {% for filter in selected_filters %}
              {% if filter.filter_options.size > 0 %}
                <div class="col">
                  <h3 class="text-2xl 3xl:text-4xl font-semibold border-b-2 border-[#707070] pb-5 mb-7">
                    {{ filter.filter_name }}
                  </h3>
                  <div class="flex flex-wrap gap-2 items-end">
                    {% for option in filter.filter_options %}
                      <button
                        class="filter-btn px-4 py-2 text-primary hover:text-white hover:bg-primary border-[3px] border-primary rounded-full uppercase font-bold text-xs tracking-widest"
                        data-filter="{{ option }}"
                      >
                        {{ option }}
                      </button>
                    {% endfor %}
                  </div>
                </div>
              {% endif %}
            {% endfor %}
          {% else %}
            <p>No filters selected. Please choose filters in Shopify Admin.</p>
          {% endif %}
        {% else %}
          <p>No filters available. Please add filters in Shopify Admin.</p>
        {% endif %}
      </aside>

      <!-- Dynamic Collection Grid (Admin-Selected) -->
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5 w-full md:w-[75%]">
        {% for block in section.blocks %}
          {% if block.type == 'collection_project' %}
            <div
              class="project-item bg-white rounded-2xl overflow-hidden relative"
              data-tags="{{ block.settings.collection_filter_value }}"
            >
              {% if block.settings.collection_image != blank %}
                <img
                  src="{{ block.settings.collection_image | img_url: '600x600' }}"
                  class="w-full aspect-square object-cover h-full"
                  alt="Collection Image"
                >
              {% else %}
                <img
                  src="https://via.placeholder.com/600"
                  class="w-full aspect-square object-cover h-full"
                  alt="Placeholder"
                >
              {% endif %}
              <div class="absolute top-0 left-0 w-full h-full p-4 xl:p-3 2xl:p-4 flex flex-wrap items-end justify-end">
                <div class="btn-wrap flex flex-wrap gap-2 justify-end">
                  <span
                    class="tag-badge px-3 py-1 bg-white text-primary border-[3px] border-primary rounded-full uppercase font-bold text-[11px] tracking-widest inline-block"
                  >
                    {{ block.settings.collection_filter_value }}
                  </span>
                </div>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</section>

<!-- Filtering Script -->
<script>
  document.addEventListener("DOMContentLoaded", function() {
    let buttons = document.querySelectorAll(".filter-btn");
    let collections = document.querySelectorAll(".project-item");

    // Initially show all collections
    collections.forEach(collection => collection.style.display = "block");

    buttons.forEach(button => {
      button.addEventListener("click", function() {
        let selectedFilter = this.getAttribute("data-filter");

        // Toggle active class
        buttons.forEach(btn => btn.classList.remove("active"));
        this.classList.add("active");

        // Show only collections that match the selected filter
        collections.forEach(collection => {
          let tags = collection.getAttribute("data-tags")?.split(",");
          if (tags.includes(selectedFilter)) {
            collection.style.display = "block";
          } else {
            collection.style.display = "none";
          }
        });
      });
    });
  });
</script>

{% schema %}
{
  "name": "Vuba Category",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "Use our filters to inspire your imagination",
      "label": "Heading"
    },
    {
      "type": "metaobject",
      "id": "project_filters",
      "label": "Select Filters",
      "metaobject_type": "project_filters"
    }
  ],
  "blocks": [
    {
      "type": "collection_project",
      "name": "Collection Project",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Select Collection"
        },
        {
          "type": "image_picker",
          "id": "collection_image",
          "label": "Collection Image"
        },
        {
          "type": "text",
          "id": "collection_filter_value",
          "label": "Filter Value (Match with Admin Filter)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Vuba Category",
      "category": "Custom"
    }
  ]
}
{% endschema %}
